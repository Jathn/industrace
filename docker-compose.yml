version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@industrace.local"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - industrace-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.industrace.local`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: industrace_user
      POSTGRES_PASSWORD: secure_password_123
      POSTGRES_DB: industrace
    volumes:
      - industrace_postgres_data:/var/lib/postgresql/data
    networks:
      - industrace-network
    labels:
      - "traefik.enable=false"
    expose:
      - "5432"

  backend:
    build: ./backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    environment:
      - DATABASE_URL=postgresql://industrace_user:secure_password_123@db:5432/industrace
      - SECRET_KEY=your-secret-key-change-in-production
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - CORS_ORIGINS=http://industrace.local,https://industrace.local,http://localhost,https://localhost
      - ENVIRONMENT=development
      - DEBUG=true
    depends_on:
      - db
    networks:
      - industrace-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`industrace.local`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.priority=100"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.backend-strip.stripprefix.prefixes=/api"
      - "traefik.http.routers.backend.middlewares=backend-strip"

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    networks:
      - industrace-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`industrace.local`) && !PathPrefix(`/api`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.priority=10"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

volumes:
  industrace_postgres_data:

networks:
  industrace-network:
    driver: bridge
